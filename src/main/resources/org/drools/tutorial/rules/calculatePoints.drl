//created on: 7/10/2018
package org.drools.tutorial.rules

//list any import classes here.
import org.drools.tutorial.model.Item;
import org.drools.tutorial.model.Person;
//import org.drools.tutorial.model.Order;
import java.math.BigDecimal;

//declare any global variables here
global java.util.List points;

declare Order
  value : BigDecimal @key
  tieneImpuesto: boolean
end

rule "calcular total compra"
    //include attributes such as "salience" here...
    when
    	not Order()
        $total: BigDecimal() from 
        	accumulate(Item($price: price, $amout: amount ), sum($price.multiply(new BigDecimal($amout))))
    then
		System.out.println("precio total de la compra: " + $total);
		insert(new Order($total));
end

rule "calcular impuesto"
    //include attributes such as "salience" here...
    when
        $order: Order(tieneImpuesto == false)
    then
		$order.setValue($order.getValue().multiply(new BigDecimal("1.19")));
		System.out.println("precio con impuesto: " + $order.getValue());
		$order.setTieneImpuesto(true);
		update($order);
end

rule "calcular puntos por cantidad"
	auto-focus true
    //include attributes such as "salience" here...
    when
        Item($amount: amount >= 20L)
    then
		System.out.println("puntos por cantidad: " + 5L*($amount/20L));
		points.add(5L*($amount/20L));
end

rule "calculo puntos por valor compra"
    when
        Order( $value: value, tieneImpuesto == true)
    then
		System.out.println("puntos por precio: " + $value.divide(new BigDecimal("10000")).longValue());
        points.add($value.divide(new BigDecimal("10000")).longValue());
end

rule "puntos por valor de item"
	auto-focus true
    when
        Item( price >= 500000L, $amount: amount )
    then
		System.out.println("puntos por precio item: " + 10L*$amount);
		points.add(10L*$amount);
end


